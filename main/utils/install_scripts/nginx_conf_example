user www-data;
worker_processes  1;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    # multi_accept on;
    use epoll;
}

http {
    # Enumerate all the Tornado servers here
    upstream actives {
        #server 127.0.0.1:8884;
        #server 127.0.0.1:8885;
        #server 127.0.0.1:8886;
        #server 127.0.0.1:8887;
        server 127.0.0.1:8888;
        #server 127.0.0.1:8889;
    }

    include       /etc/nginx/mime.types;

    access_log  /var/log/nginx/access.log;
    default_type application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    proxy_read_timeout 200;
    tcp_nopush      on;
    tcp_nodelay         on;
    gzip        on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    #gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen      80;
        server_name  [NOME DO SEU DOMINIO];
        #server_name _ ;
        root [CAMINHO PARA O MAIN DO ACTIV]
        #exemplo: root   /opt/activufrj/main;
        location /new/user {
           rewrite ^ https://$host$request_uri? permanent;
        }
        location /login {
           rewrite ^ https://$host$request_uri? permanent;
        }
        location /homepage {
           rewrite ^ https://$host$request_uri? permanent;
        }
        location /profile/changepasswd {
           rewrite ^ https://$host$request_uri? permanent;
        }

        # Allow file uploads
        client_max_body_size 50M;

        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location static/ {
            root [CAMINHO PARA O MAIN DO ACTIV]
            #exemplo: root   /opt/activufrj/main;
            if ($query_string) {
                expires max;
            }
        }

        location / {

            #rewrite ^ https://$host$request_uri redirect;
            proxy_pass_header Server;
            # needed to forward user's IP address to app
            proxy_set_header  X-Real-IP  $remote_addr;
            # needed to intercept responses
            #proxy_intercept_errors on;

            # needed for HTTPS
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            #No activNCE tinha esta diretiva
            #proxy_max_temp_file_size 0;

            proxy_redirect off;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://actives;
        }
        
    }

    server {
        listen 443;
        ssl on;
        ssl_certificate [ LOCALIZAÇÃO DO SEU CERTIFICADO .CRT ]
        # exemplo: ssl_certificate /etc/ssl/activufrj.crt;
        ssl_certificate_key [ LOCALIZAÇÃO DO SEU CERTIFICADO .KEY ]
        # exemplo: ssl_certificate_key /etc/ssl/private/activufrj.key;
        server_name  [NOME DO SEU DOMINIO];
        #server_name _ ;
        root [CAMINHO PARA O MAIN DO ACTIV]
        #exemplo: root   /opt/activufrj/main;

        # Allow file uploads
        client_max_body_size 50M;

        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location static/ {
            root [CAMINHO PARA O MAIN DO ACTIV]
            #exemplo: root   /opt/activufrj/main;
            if ($query_string) {
                expires max;
            }
        }

        location / {

            proxy_pass_header Server;
            # needed to forward user's IP address to app
            proxy_set_header  X-Real-IP  $remote_addr;
            # needed to intercept responses
            #proxy_intercept_errors on;

            # needed for HTTPS
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            #No activNCE tinha esta diretiva
            #proxy_max_temp_file_size 0;

            proxy_redirect off;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://actives;
        }
    }
}
